// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTMS.Data.DataContext;

#nullable disable

namespace MyTMS.Data.Migrations
{
    [DbContext(typeof(MyTMSDBContext))]
    [Migration("20250407112951_CreateBookingTable")]
    partial class CreateBookingTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyTMS.Data.Entities.Booking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int");

                    b.Property<int>("BookingType")
                        .HasColumnType("int");

                    b.Property<long>("CarrierId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CartageCharge")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTimeOffset?>("ContainerDemurrageDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ContainerDetentionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ContainerDischargedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ContainerJobType")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerPinNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContainerPortCode")
                        .HasColumnType("int");

                    b.Property<string>("ContainerReleaseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerVesselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerVoyageNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("Cubic")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("CubicActual")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("CurrentVehicleId")
                        .HasColumnType("bigint");

                    b.Property<string>("DispatchMemo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FreightPayerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastVehicleId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrderRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("SurchargeCharge")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TotalCharge")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("WeightActual")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("CurrentVehicleId");

                    b.HasIndex("FreightPayerId");

                    b.HasIndex("LastVehicleId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Place", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DOB")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FleetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakeModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Registration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Booking", b =>
                {
                    b.HasOne("MyTMS.Data.Entities.Organization", "Carrier")
                        .WithMany("FreightCarrierBookings")
                        .HasForeignKey("CarrierId")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_Organization_Carrier");

                    b.HasOne("MyTMS.Data.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("MyTMS.Data.Entities.Vehicle", "CurrentVehicle")
                        .WithMany("CurrentVehicleBookings")
                        .HasForeignKey("CurrentVehicleId")
                        .HasConstraintName("FK_Booking_Vehicle_CurrentVehicle");

                    b.HasOne("MyTMS.Data.Entities.Organization", "FreightPayer")
                        .WithMany("FreightPayerBookings")
                        .HasForeignKey("FreightPayerId")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_Organization_FreightPayer");

                    b.HasOne("MyTMS.Data.Entities.Vehicle", "LastVehicle")
                        .WithMany("LastVehicleBookings")
                        .HasForeignKey("LastVehicleId")
                        .HasConstraintName("FK_Booking_Vehicle_LastVehicle");

                    b.Navigation("Carrier");

                    b.Navigation("CreatedByUser");

                    b.Navigation("CurrentVehicle");

                    b.Navigation("FreightPayer");

                    b.Navigation("LastVehicle");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Place", b =>
                {
                    b.HasOne("MyTMS.Data.Entities.Organization", "Organization")
                        .WithMany("Places")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Vehicle", b =>
                {
                    b.HasOne("MyTMS.Data.Entities.Organization", "Organization")
                        .WithMany("Vehicles")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Organization", b =>
                {
                    b.Navigation("FreightCarrierBookings");

                    b.Navigation("FreightPayerBookings");

                    b.Navigation("Places");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("MyTMS.Data.Entities.Vehicle", b =>
                {
                    b.Navigation("CurrentVehicleBookings");

                    b.Navigation("LastVehicleBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
